// Generated by view binder compiler. Do not edit!
package com.example.anthonypremo_inventoryapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Switch;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.anthonypremo_inventoryapp.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton addItemButton;

  @NonNull
  public final EditText editTextItemName;

  @NonNull
  public final EditText editTextItemQuantity;

  @NonNull
  public final ListView inventoryGrid;

  @NonNull
  public final Switch notificationsSwitch;

  @NonNull
  public final MaterialButton removeItemButton;

  @NonNull
  public final MaterialButton signOutButton;

  @NonNull
  public final MaterialButton updateItemButton;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton addItemButton, @NonNull EditText editTextItemName,
      @NonNull EditText editTextItemQuantity, @NonNull ListView inventoryGrid,
      @NonNull Switch notificationsSwitch, @NonNull MaterialButton removeItemButton,
      @NonNull MaterialButton signOutButton, @NonNull MaterialButton updateItemButton) {
    this.rootView = rootView;
    this.addItemButton = addItemButton;
    this.editTextItemName = editTextItemName;
    this.editTextItemQuantity = editTextItemQuantity;
    this.inventoryGrid = inventoryGrid;
    this.notificationsSwitch = notificationsSwitch;
    this.removeItemButton = removeItemButton;
    this.signOutButton = signOutButton;
    this.updateItemButton = updateItemButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_item_button;
      MaterialButton addItemButton = ViewBindings.findChildViewById(rootView, id);
      if (addItemButton == null) {
        break missingId;
      }

      id = R.id.edit_text_item_name;
      EditText editTextItemName = ViewBindings.findChildViewById(rootView, id);
      if (editTextItemName == null) {
        break missingId;
      }

      id = R.id.edit_text_item_quantity;
      EditText editTextItemQuantity = ViewBindings.findChildViewById(rootView, id);
      if (editTextItemQuantity == null) {
        break missingId;
      }

      id = R.id.inventory_grid;
      ListView inventoryGrid = ViewBindings.findChildViewById(rootView, id);
      if (inventoryGrid == null) {
        break missingId;
      }

      id = R.id.notificationsSwitch;
      Switch notificationsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (notificationsSwitch == null) {
        break missingId;
      }

      id = R.id.remove_item_button;
      MaterialButton removeItemButton = ViewBindings.findChildViewById(rootView, id);
      if (removeItemButton == null) {
        break missingId;
      }

      id = R.id.sign_out_button;
      MaterialButton signOutButton = ViewBindings.findChildViewById(rootView, id);
      if (signOutButton == null) {
        break missingId;
      }

      id = R.id.update_item_button;
      MaterialButton updateItemButton = ViewBindings.findChildViewById(rootView, id);
      if (updateItemButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, addItemButton, editTextItemName,
          editTextItemQuantity, inventoryGrid, notificationsSwitch, removeItemButton, signOutButton,
          updateItemButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
